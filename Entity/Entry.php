<?php

namespace MauticPlugin\MauticContactLedgerBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Mautic\CoreBundle\Doctrine\Mapping\ClassMetadataBuilder;
use Mautic\CoreBundle\Entity\CommonEntity;
use Mautic\LeadBundle\Entity\Lead;

/**
 * class Entry extends {@see \Mautic\CoreBundle\Entity\CommonEntity}
 * 
 * @package \MauticPlugin\MauticContactLedgerBundle\Entity
 */
class Entry extends CommonEntity
{
    /**
     * @var int $id primary key
     */
    private $id;

    /**
     * @var datetime $date_added time entry was made
     */
    private $date_added;
    
    /**
     * @var  \Mautic\LeadBundle\Entity\Lead $contact
     */
    private $contact;

    /**
     * @var \Mautic\CampaignBundle\Entity\Campaign $campaign
     */
    protected $campaign;
    
    /**
     * Collectively, the bundle_name, class_name, and actor_id define the acting entity
     * 
     * @var string $bundle_name package class_name is found in
     */
    private $bundle_name;

    /**
     * @var string $class_name type the actor belongs to
     */
    private $class_name;
    
    /**
     * @var int $actor_id identity of actor
     */
    private $actor_id;

    /**
     * @var string $activity action performed by the actor (bundle_name,class_name,actor_id) performed
     */
    private $activity;

    /**
     * @var string $memo optional notes
     */
    private $memo;

    /**
     * @var string|float $cost cost incurred by action 
     */
    private $cost;

    /**
     * @var string|float $revenue revenue generated by action
     */
    private $revenue;
    
    /**
     * Metadata used by the ORM to handle the entity
     * 
     * @param Doctrine\ORM\Mapping\ClassMetadata $metadata
     */
    public static function loadMetadata(ORM\ClassMetadata $metadata)
    {
        $builder = new ClassMetadataBuilder($metadata);

        $builder->setTable('contact_ledger')
            ->setCustomRepositoryClass('MauticPlugin\MauticContactLedgerBundle\Entity\EntryRepository');

        $builder->addId();
        
        $builder->createField('date_added', 'datetime')
            ->build();
            
        $builder->createManyToOne('contact', 'Mautic\LeadBundle\Entity\Lead')
            ->addJoinColumn('contact_id', 'id', false)
            ->build();
        
        $builder->createManyToOne('campaign', 'Mautic\CampaignBundle\Entity\Campaign')
            ->addJoinColumn('campaign_id', 'id', false)
            ->build();
        
        $builder->createField('bundle_name', 'string')
            ->length(100)
            ->build();

        $builder->createField('class_name', 'string')
            ->length(50)
            ->build();

        $builder->createField('actor_id', 'integer')
            ->build();

        $builder->createField('activity', 'string')
            ->length(50)
            ->build();

        $builder->createField('memo', 'string')
            ->length(255)
            ->nullable()
            ->build();

        $builder->createField('cost', 'decimal')
            ->precision(19)
            ->scale(4)
            ->nullable()
            ->build();

        $builder->createField('revenue', 'decimal')
            ->precision(19)
            ->scale(4)
            ->nullable()
            ->build();
    }

    /**
     * @return int read-only
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * @return string when the entry was added
     */
    public function getDateAdded()
    {
        return $this->date_added;
    }

    /**
     * @param string $dateAdded
     * 
     * @return $this
     */
    public function setDateAdded($date_added)
    {
        $this->date_added = $date_added;
        return $this;
    }

    /**
     * @return \Mautic\LeadBundle\Entity\Lead
     */
    public function getContact()
    {
        return $this->contact;
    }

    /**
     * @param \Mautic\LeadBundle\Entity\Lead $contact
     *
     * @return $this
     */
    public function setContact(Lead $contact)
    {
        $this->contact = $contact;
        
        return $this;
    }
    
    /**
     * @return \Mautic\CampaignBundle\Entity\Campaign
     */
    public function getCampaign()
    {
        return $this->campaign;
    }    
    
    public function setCampaign(Campaign $campaign)
    {
        $this->campaign = $campaign;
    }
    
    /**
     * @return string
     */
    public function getBundleName()
    {
        return $this->bundle_name;
    }

    /**
     * @param string $bundle_name
     *
     * @return $this
     */
    public function setBundleName($bundle_name)
    {
        $this->bundle_name = $bundle_name;
        return $this;
    }

    /**
     * @return sting
     */
    public function getClassName()
    {
        return $this->class_name;
    }

    /**
     * @param string $class_name
     *
     * @return $this
     */
    public function setClassName($class_name)
    {
        $this->class_name = $class_name;
        return $this;
    }

    /**
     * @return int
     */
    public function getActorId()
    {
        return $this->actor_id;
    }

    /**
     * @param int $object_id
     *
     * @return $this
     */
    public function setActorId($actor)
    {
        $this->actor_id = $actor;
        return $this;
    }

    /**
     * @return string
     */
    public function getActivity()
    {
        return $this->activity;
    }

    /**
     * @param string $activity
     *
     * @return $this
     */
    public function setActivity($activity)
    {
        $this->activity = $action;
        return $this;
    }

    /**
     * @return string
     */
    public function getMemo()
    {
        return $this->memo;
    }

    /**
     * @param string $memo
     *
     * @retun $this
     */
    public function setMemo($memo)
    {
        $this->memo = $memo;
        return $this;
    }

    /**
     * @return string|float
     */
    public function getCost()
    {
        return $this->cost;
    }

    /**
     * @param string|float $cost
     *
     * @return $this
     */
    public function setCost($cost)
    {
        $this->cost = $cost;
        return $this;
    }

    /**
     * @return string|float
     */
    public function getRevenue()
    {
        return $this->revnue;
    }

    /**
     * @param string|float $revenue
     *
     * @return $this
     */
    public function setRevenue($revenue)
    {
        $this->revenue = $revenue;
        return $this;
    }
}
